|hexbingame2
game_over <= count100:inst10.game_over
enter => count8:inst2.entern
50Mhz => prescale:inst.clock
50Mhz => divide_by_N:inst1.clock
50Mhz => count8:inst2.clock
50Mhz => count100:inst10.clock
50Mhz => storeit_synch:inst14.clock
50Mhz => count100:inst7.clock
n[0] => divide_by_N:inst1.n[0]
n[1] => divide_by_N:inst1.n[1]
n[2] => divide_by_N:inst1.n[2]
n[3] => divide_by_N:inst1.n[3]
new_gameN => count100:inst10.clearn
new_gameN => count100:inst7.clearn
hex0[0] <= decode_7seg:inst13.disp[0]
hex0[1] <= decode_7seg:inst13.disp[1]
hex0[2] <= decode_7seg:inst13.disp[2]
hex0[3] <= decode_7seg:inst13.disp[3]
hex0[4] <= decode_7seg:inst13.disp[4]
hex0[5] <= decode_7seg:inst13.disp[5]
hex0[6] <= decode_7seg:inst13.disp[6]
24Mhz => div11:inst3.clock
mod16N => random:inst4.mod16N
hexN => random:inst4.hexN_bcd
HEX1[0] <= decode_octal:inst25.bar_graph[0]
HEX1[1] <= decode_octal:inst25.bar_graph[1]
HEX1[2] <= decode_octal:inst25.bar_graph[2]
HEX1[3] <= decode_octal:inst25.bar_graph[3]
HEX1[4] <= decode_octal:inst25.bar_graph[4]
HEX1[5] <= decode_octal:inst25.bar_graph[5]
HEX1[6] <= decode_octal:inst25.bar_graph[6]
hex2[0] <= decode_7seg:inst12.disp[0]
hex2[1] <= decode_7seg:inst12.disp[1]
hex2[2] <= decode_7seg:inst12.disp[2]
hex2[3] <= decode_7seg:inst12.disp[3]
hex2[4] <= decode_7seg:inst12.disp[4]
hex2[5] <= decode_7seg:inst12.disp[5]
hex2[6] <= decode_7seg:inst12.disp[6]
HEX3[0] <= decode_7seg:inst11.disp[0]
HEX3[1] <= decode_7seg:inst11.disp[1]
HEX3[2] <= decode_7seg:inst11.disp[2]
HEX3[3] <= decode_7seg:inst11.disp[3]
HEX3[4] <= decode_7seg:inst11.disp[4]
HEX3[5] <= decode_7seg:inst11.disp[5]
HEX3[6] <= decode_7seg:inst11.disp[6]
hex4[0] <= decode_7seg:inst8.disp[0]
hex4[1] <= decode_7seg:inst8.disp[1]
hex4[2] <= decode_7seg:inst8.disp[2]
hex4[3] <= decode_7seg:inst8.disp[3]
hex4[4] <= decode_7seg:inst8.disp[4]
hex4[5] <= decode_7seg:inst8.disp[5]
hex4[6] <= decode_7seg:inst8.disp[6]
answer[0] => compare:inst6.answer[0]
answer[1] => compare:inst6.answer[1]
answer[2] => compare:inst6.answer[2]
answer[3] => compare:inst6.answer[3]
hex5[0] <= decode_7seg:inst9.disp[0]
hex5[1] <= decode_7seg:inst9.disp[1]
hex5[2] <= decode_7seg:inst9.disp[2]
hex5[3] <= decode_7seg:inst9.disp[3]
hex5[4] <= decode_7seg:inst9.disp[4]
hex5[5] <= decode_7seg:inst9.disp[5]
hex5[6] <= decode_7seg:inst9.disp[6]


|hexbingame2|count100:inst10
enable => _.IN0
enable => _.IN0
clock => lsd_bcd[3]~reg.CLK
clock => lsd_bcd[2]~reg.CLK
clock => lsd_bcd[1]~reg.CLK
clock => lsd_bcd[0]~reg.CLK
clock => msd_bcd[3]~reg.CLK
clock => msd_bcd[2]~reg.CLK
clock => msd_bcd[1]~reg.CLK
clock => msd_bcd[0]~reg.CLK
clock => game_over~reg.CLK
clearn => lsd_bcd[3]~reg.ACLR
clearn => lsd_bcd[2]~reg.ACLR
clearn => lsd_bcd[1]~reg.ACLR
clearn => lsd_bcd[0]~reg.ACLR
clearn => msd_bcd[3]~reg.ACLR
clearn => msd_bcd[2]~reg.ACLR
clearn => msd_bcd[1]~reg.ACLR
clearn => msd_bcd[0]~reg.ACLR
clearn => game_over~reg.ACLR
lsd_bcd[0] <= lsd_bcd[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[1] <= lsd_bcd[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[2] <= lsd_bcd[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[3] <= lsd_bcd[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[0] <= msd_bcd[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[1] <= msd_bcd[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[2] <= msd_bcd[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[3] <= msd_bcd[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
game_over <= game_over~reg.DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|count8:inst2
entern => _.IN0
entern => EDGE[0].DATAIN
enable => _.IN0
clock => mod8[2]~reg.CLK
clock => mod8[1]~reg.CLK
clock => mod8[0]~reg.CLK
clock => SR.CLK
clock => EDGE[0].CLK
clock => EDGE[1].CLK
clock => EDGE[2].CLK
mod8[0] <= mod8[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
mod8[1] <= mod8[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
mod8[2] <= mod8[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
timesupN <= timesupN.DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|divide_by_N:inst1
enable => tc.IN0
enable => _.IN0
enable => _.IN0
clock => divide[3].CLK
clock => divide[2].CLK
clock => divide[1].CLK
clock => divide[0].CLK
n[0] => _.IN1
n[1] => _.IN1
n[2] => _.IN1
n[3] => _.IN1
tc <= tc.DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|prescale:inst
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]
q[13] <= lpm_counter:LPM_COUNTER_component.q[13]
q[14] <= lpm_counter:LPM_COUNTER_component.q[14]
q[15] <= lpm_counter:LPM_COUNTER_component.q[15]
q[16] <= lpm_counter:LPM_COUNTER_component.q[16]
q[17] <= lpm_counter:LPM_COUNTER_component.q[17]
q[18] <= lpm_counter:LPM_COUNTER_component.q[18]
q[19] <= lpm_counter:LPM_COUNTER_component.q[19]
q[20] <= lpm_counter:LPM_COUNTER_component.q[20]
q[21] <= lpm_counter:LPM_COUNTER_component.q[21]
q[22] <= lpm_counter:LPM_COUNTER_component.q[22]


|hexbingame2|prescale:inst|lpm_counter:LPM_COUNTER_component
clock => cntr_2ak:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_2ak:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_2ak:auto_generated.q[0]
q[1] <= cntr_2ak:auto_generated.q[1]
q[2] <= cntr_2ak:auto_generated.q[2]
q[3] <= cntr_2ak:auto_generated.q[3]
q[4] <= cntr_2ak:auto_generated.q[4]
q[5] <= cntr_2ak:auto_generated.q[5]
q[6] <= cntr_2ak:auto_generated.q[6]
q[7] <= cntr_2ak:auto_generated.q[7]
q[8] <= cntr_2ak:auto_generated.q[8]
q[9] <= cntr_2ak:auto_generated.q[9]
q[10] <= cntr_2ak:auto_generated.q[10]
q[11] <= cntr_2ak:auto_generated.q[11]
q[12] <= cntr_2ak:auto_generated.q[12]
q[13] <= cntr_2ak:auto_generated.q[13]
q[14] <= cntr_2ak:auto_generated.q[14]
q[15] <= cntr_2ak:auto_generated.q[15]
q[16] <= cntr_2ak:auto_generated.q[16]
q[17] <= cntr_2ak:auto_generated.q[17]
q[18] <= cntr_2ak:auto_generated.q[18]
q[19] <= cntr_2ak:auto_generated.q[19]
q[20] <= cntr_2ak:auto_generated.q[20]
q[21] <= cntr_2ak:auto_generated.q[21]
q[22] <= cntr_2ak:auto_generated.q[22]
cout <= cntr_2ak:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|hexbingame2|prescale:inst|lpm_counter:LPM_COUNTER_component|cntr_2ak:auto_generated
clock => counter_reg_bit[22].CLK
clock => counter_reg_bit[21].CLK
clock => counter_reg_bit[20].CLK
clock => counter_reg_bit[19].CLK
clock => counter_reg_bit[18].CLK
clock => counter_reg_bit[17].CLK
clock => counter_reg_bit[16].CLK
clock => counter_reg_bit[15].CLK
clock => counter_reg_bit[14].CLK
clock => counter_reg_bit[13].CLK
clock => counter_reg_bit[12].CLK
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN0
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= counter_reg_bit[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= counter_reg_bit[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= counter_reg_bit[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= counter_reg_bit[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= counter_reg_bit[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= counter_reg_bit[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= counter_reg_bit[18].DB_MAX_OUTPUT_PORT_TYPE
q[19] <= counter_reg_bit[19].DB_MAX_OUTPUT_PORT_TYPE
q[20] <= counter_reg_bit[20].DB_MAX_OUTPUT_PORT_TYPE
q[21] <= counter_reg_bit[21].DB_MAX_OUTPUT_PORT_TYPE
q[22] <= counter_reg_bit[22].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|prescale:inst|lpm_counter:LPM_COUNTER_component|cntr_2ak:auto_generated|cmpr_tac:cmpr1
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[3].IN0
dataa[1] => data_wire[3].IN0
dataa[2] => data_wire[4].IN0
dataa[3] => data_wire[4].IN0
dataa[4] => data_wire[5].IN0
dataa[5] => data_wire[5].IN0
dataa[6] => data_wire[6].IN0
dataa[7] => data_wire[6].IN0
dataa[8] => data_wire[7].IN0
dataa[9] => data_wire[7].IN0
dataa[10] => data_wire[8].IN0
dataa[11] => data_wire[8].IN0
dataa[12] => data_wire[9].IN0
dataa[13] => data_wire[9].IN0
dataa[14] => data_wire[10].IN0
dataa[15] => data_wire[10].IN0
dataa[16] => data_wire[11].IN0
dataa[17] => data_wire[11].IN0
dataa[18] => data_wire[12].IN0
dataa[19] => data_wire[12].IN0
dataa[20] => data_wire[13].IN0
dataa[21] => data_wire[13].IN0
dataa[22] => data_wire[14].IN0
datab[0] => data_wire[3].IN1
datab[1] => data_wire[3].IN1
datab[2] => data_wire[4].IN1
datab[3] => data_wire[4].IN1
datab[4] => data_wire[5].IN1
datab[5] => data_wire[5].IN1
datab[6] => data_wire[6].IN1
datab[7] => data_wire[6].IN1
datab[8] => data_wire[7].IN1
datab[9] => data_wire[7].IN1
datab[10] => data_wire[8].IN1
datab[11] => data_wire[8].IN1
datab[12] => data_wire[9].IN1
datab[13] => data_wire[9].IN1
datab[14] => data_wire[10].IN1
datab[15] => data_wire[10].IN1
datab[16] => data_wire[11].IN1
datab[17] => data_wire[11].IN1
datab[18] => data_wire[12].IN1
datab[19] => data_wire[12].IN1
datab[20] => data_wire[13].IN1
datab[21] => data_wire[13].IN1
datab[22] => data_wire[14].IN1


|hexbingame2|decode_7seg:inst13
hex[0] => _.IN0
hex[0] => disp[6]~1.IN3
hex[0] => _.IN0
hex[0] => disp[5]~3.IN3
hex[0] => _.IN0
hex[0] => disp[4]~5.IN3
hex[0] => _.IN0
hex[0] => disp[6]~7.IN3
hex[0] => _.IN0
hex[0] => disp[4]~8.IN3
hex[0] => _.IN0
hex[0] => disp[1]~10.IN3
hex[0] => _.IN0
hex[0] => disp[5]~12.IN3
hex[0] => _.IN0
hex[0] => disp[3]~14.IN3
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[5]~2.IN2
hex[1] => disp[5]~3.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[1]~6.IN2
hex[1] => disp[6]~7.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[3]~9.IN2
hex[1] => disp[1]~10.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[2]~13.IN2
hex[1] => disp[3]~14.IN2
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[4]~4.IN1
hex[2] => disp[4]~5.IN1
hex[2] => disp[1]~6.IN1
hex[2] => disp[6]~7.IN1
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[6]~11.IN1
hex[2] => disp[5]~12.IN1
hex[2] => disp[2]~13.IN1
hex[2] => disp[3]~14.IN1
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => disp[4]~8.IN0
hex[3] => disp[3]~9.IN0
hex[3] => disp[1]~10.IN0
hex[3] => disp[6]~11.IN0
hex[3] => disp[5]~12.IN0
hex[3] => disp[2]~13.IN0
hex[3] => disp[3]~14.IN0
disp[0] <= disp[0].DB_MAX_OUTPUT_PORT_TYPE
disp[1] <= disp[1].DB_MAX_OUTPUT_PORT_TYPE
disp[2] <= disp[2].DB_MAX_OUTPUT_PORT_TYPE
disp[3] <= disp[3].DB_MAX_OUTPUT_PORT_TYPE
disp[4] <= disp[4].DB_MAX_OUTPUT_PORT_TYPE
disp[5] <= disp[5].DB_MAX_OUTPUT_PORT_TYPE
disp[6] <= disp[6].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|storeit_synch:inst14
clock => reg[3].CLK
clock => reg[2].CLK
clock => reg[1].CLK
clock => reg[0].CLK
timesupN => reg[3].ENA
timesupN => reg[2].ENA
timesupN => reg[1].ENA
timesupN => reg[0].ENA
hex_in[0] => reg[0].DATAIN
hex_in[1] => reg[1].DATAIN
hex_in[2] => reg[2].DATAIN
hex_in[3] => reg[3].DATAIN
hex_out[0] <= reg[0].DB_MAX_OUTPUT_PORT_TYPE
hex_out[1] <= reg[1].DB_MAX_OUTPUT_PORT_TYPE
hex_out[2] <= reg[2].DB_MAX_OUTPUT_PORT_TYPE
hex_out[3] <= reg[3].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|random:inst4
clk24M => mod16[3].CLK
clk24M => mod16[2].CLK
clk24M => mod16[1].CLK
clk24M => mod16[0].CLK
mod16N => _.IN0
hexN_bcd => _.IN0
hex[0] <= mod16[0].DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= mod16[1].DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= mod16[2].DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= mod16[3].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|div11:inst3
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]


|hexbingame2|div11:inst3|lpm_counter:LPM_COUNTER_component
clock => cntr_acj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_acj:auto_generated.q[0]
q[1] <= cntr_acj:auto_generated.q[1]
q[2] <= cntr_acj:auto_generated.q[2]
q[3] <= cntr_acj:auto_generated.q[3]
q[4] <= cntr_acj:auto_generated.q[4]
cout <= cntr_acj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|hexbingame2|div11:inst3|lpm_counter:LPM_COUNTER_component|cntr_acj:auto_generated
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|div11:inst3|lpm_counter:LPM_COUNTER_component|cntr_acj:auto_generated|cmpr_d9c:cmpr1
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1


|hexbingame2|decode_octal:inst25
bin[0] => _.IN0
bin[0] => bar_graph[1]~1.IN2
bin[0] => _.IN0
bin[0] => bar_graph[4]~3.IN2
bin[0] => _.IN0
bin[0] => bar_graph[5]~5.IN2
bin[0] => _.IN0
bin[0] => bar_graph[6]~7.IN2
bin[1] => _.IN0
bin[1] => _.IN0
bin[1] => bar_graph[4]~2.IN1
bin[1] => bar_graph[4]~3.IN1
bin[1] => _.IN0
bin[1] => _.IN0
bin[1] => bar_graph[6]~6.IN1
bin[1] => bar_graph[6]~7.IN1
bin[2] => _.IN0
bin[2] => _.IN0
bin[2] => _.IN0
bin[2] => _.IN0
bin[2] => bar_graph[5]~4.IN0
bin[2] => bar_graph[5]~5.IN0
bin[2] => bar_graph[6]~6.IN0
bin[2] => bar_graph[6]~7.IN0
bar_graph[0] <= bar_graph[0].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[1] <= bar_graph[1].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[2] <= bar_graph[2].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[3] <= bar_graph[3].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[4] <= bar_graph[4].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[5] <= bar_graph[5].DB_MAX_OUTPUT_PORT_TYPE
bar_graph[6] <= bar_graph[6].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|decode_7seg:inst12
hex[0] => _.IN0
hex[0] => disp[6]~1.IN3
hex[0] => _.IN0
hex[0] => disp[5]~3.IN3
hex[0] => _.IN0
hex[0] => disp[4]~5.IN3
hex[0] => _.IN0
hex[0] => disp[6]~7.IN3
hex[0] => _.IN0
hex[0] => disp[4]~8.IN3
hex[0] => _.IN0
hex[0] => disp[1]~10.IN3
hex[0] => _.IN0
hex[0] => disp[5]~12.IN3
hex[0] => _.IN0
hex[0] => disp[3]~14.IN3
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[5]~2.IN2
hex[1] => disp[5]~3.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[1]~6.IN2
hex[1] => disp[6]~7.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[3]~9.IN2
hex[1] => disp[1]~10.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[2]~13.IN2
hex[1] => disp[3]~14.IN2
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[4]~4.IN1
hex[2] => disp[4]~5.IN1
hex[2] => disp[1]~6.IN1
hex[2] => disp[6]~7.IN1
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[6]~11.IN1
hex[2] => disp[5]~12.IN1
hex[2] => disp[2]~13.IN1
hex[2] => disp[3]~14.IN1
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => disp[4]~8.IN0
hex[3] => disp[3]~9.IN0
hex[3] => disp[1]~10.IN0
hex[3] => disp[6]~11.IN0
hex[3] => disp[5]~12.IN0
hex[3] => disp[2]~13.IN0
hex[3] => disp[3]~14.IN0
disp[0] <= disp[0].DB_MAX_OUTPUT_PORT_TYPE
disp[1] <= disp[1].DB_MAX_OUTPUT_PORT_TYPE
disp[2] <= disp[2].DB_MAX_OUTPUT_PORT_TYPE
disp[3] <= disp[3].DB_MAX_OUTPUT_PORT_TYPE
disp[4] <= disp[4].DB_MAX_OUTPUT_PORT_TYPE
disp[5] <= disp[5].DB_MAX_OUTPUT_PORT_TYPE
disp[6] <= disp[6].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|decode_7seg:inst11
hex[0] => _.IN0
hex[0] => disp[6]~1.IN3
hex[0] => _.IN0
hex[0] => disp[5]~3.IN3
hex[0] => _.IN0
hex[0] => disp[4]~5.IN3
hex[0] => _.IN0
hex[0] => disp[6]~7.IN3
hex[0] => _.IN0
hex[0] => disp[4]~8.IN3
hex[0] => _.IN0
hex[0] => disp[1]~10.IN3
hex[0] => _.IN0
hex[0] => disp[5]~12.IN3
hex[0] => _.IN0
hex[0] => disp[3]~14.IN3
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[5]~2.IN2
hex[1] => disp[5]~3.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[1]~6.IN2
hex[1] => disp[6]~7.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[3]~9.IN2
hex[1] => disp[1]~10.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[2]~13.IN2
hex[1] => disp[3]~14.IN2
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[4]~4.IN1
hex[2] => disp[4]~5.IN1
hex[2] => disp[1]~6.IN1
hex[2] => disp[6]~7.IN1
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[6]~11.IN1
hex[2] => disp[5]~12.IN1
hex[2] => disp[2]~13.IN1
hex[2] => disp[3]~14.IN1
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => disp[4]~8.IN0
hex[3] => disp[3]~9.IN0
hex[3] => disp[1]~10.IN0
hex[3] => disp[6]~11.IN0
hex[3] => disp[5]~12.IN0
hex[3] => disp[2]~13.IN0
hex[3] => disp[3]~14.IN0
disp[0] <= disp[0].DB_MAX_OUTPUT_PORT_TYPE
disp[1] <= disp[1].DB_MAX_OUTPUT_PORT_TYPE
disp[2] <= disp[2].DB_MAX_OUTPUT_PORT_TYPE
disp[3] <= disp[3].DB_MAX_OUTPUT_PORT_TYPE
disp[4] <= disp[4].DB_MAX_OUTPUT_PORT_TYPE
disp[5] <= disp[5].DB_MAX_OUTPUT_PORT_TYPE
disp[6] <= disp[6].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|decode_7seg:inst8
hex[0] => _.IN0
hex[0] => disp[6]~1.IN3
hex[0] => _.IN0
hex[0] => disp[5]~3.IN3
hex[0] => _.IN0
hex[0] => disp[4]~5.IN3
hex[0] => _.IN0
hex[0] => disp[6]~7.IN3
hex[0] => _.IN0
hex[0] => disp[4]~8.IN3
hex[0] => _.IN0
hex[0] => disp[1]~10.IN3
hex[0] => _.IN0
hex[0] => disp[5]~12.IN3
hex[0] => _.IN0
hex[0] => disp[3]~14.IN3
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[5]~2.IN2
hex[1] => disp[5]~3.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[1]~6.IN2
hex[1] => disp[6]~7.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[3]~9.IN2
hex[1] => disp[1]~10.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[2]~13.IN2
hex[1] => disp[3]~14.IN2
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[4]~4.IN1
hex[2] => disp[4]~5.IN1
hex[2] => disp[1]~6.IN1
hex[2] => disp[6]~7.IN1
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[6]~11.IN1
hex[2] => disp[5]~12.IN1
hex[2] => disp[2]~13.IN1
hex[2] => disp[3]~14.IN1
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => disp[4]~8.IN0
hex[3] => disp[3]~9.IN0
hex[3] => disp[1]~10.IN0
hex[3] => disp[6]~11.IN0
hex[3] => disp[5]~12.IN0
hex[3] => disp[2]~13.IN0
hex[3] => disp[3]~14.IN0
disp[0] <= disp[0].DB_MAX_OUTPUT_PORT_TYPE
disp[1] <= disp[1].DB_MAX_OUTPUT_PORT_TYPE
disp[2] <= disp[2].DB_MAX_OUTPUT_PORT_TYPE
disp[3] <= disp[3].DB_MAX_OUTPUT_PORT_TYPE
disp[4] <= disp[4].DB_MAX_OUTPUT_PORT_TYPE
disp[5] <= disp[5].DB_MAX_OUTPUT_PORT_TYPE
disp[6] <= disp[6].DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|count100:inst7
enable => _.IN0
enable => _.IN0
clock => lsd_bcd[3]~reg.CLK
clock => lsd_bcd[2]~reg.CLK
clock => lsd_bcd[1]~reg.CLK
clock => lsd_bcd[0]~reg.CLK
clock => msd_bcd[3]~reg.CLK
clock => msd_bcd[2]~reg.CLK
clock => msd_bcd[1]~reg.CLK
clock => msd_bcd[0]~reg.CLK
clock => game_over~reg.CLK
clearn => lsd_bcd[3]~reg.ACLR
clearn => lsd_bcd[2]~reg.ACLR
clearn => lsd_bcd[1]~reg.ACLR
clearn => lsd_bcd[0]~reg.ACLR
clearn => msd_bcd[3]~reg.ACLR
clearn => msd_bcd[2]~reg.ACLR
clearn => msd_bcd[1]~reg.ACLR
clearn => msd_bcd[0]~reg.ACLR
clearn => game_over~reg.ACLR
lsd_bcd[0] <= lsd_bcd[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[1] <= lsd_bcd[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[2] <= lsd_bcd[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
lsd_bcd[3] <= lsd_bcd[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[0] <= msd_bcd[0]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[1] <= msd_bcd[1]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[2] <= msd_bcd[2]~reg.DB_MAX_OUTPUT_PORT_TYPE
msd_bcd[3] <= msd_bcd[3]~reg.DB_MAX_OUTPUT_PORT_TYPE
game_over <= game_over~reg.DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|compare:inst6
enablen => _.IN0
answer[0] => _.IN0
answer[1] => _.IN0
answer[2] => _.IN0
answer[3] => _.IN0
hex[0] => _.IN1
hex[1] => _.IN1
hex[2] => _.IN1
hex[3] => _.IN1
correct <= correct.DB_MAX_OUTPUT_PORT_TYPE


|hexbingame2|decode_7seg:inst9
hex[0] => _.IN0
hex[0] => disp[6]~1.IN3
hex[0] => _.IN0
hex[0] => disp[5]~3.IN3
hex[0] => _.IN0
hex[0] => disp[4]~5.IN3
hex[0] => _.IN0
hex[0] => disp[6]~7.IN3
hex[0] => _.IN0
hex[0] => disp[4]~8.IN3
hex[0] => _.IN0
hex[0] => disp[1]~10.IN3
hex[0] => _.IN0
hex[0] => disp[5]~12.IN3
hex[0] => _.IN0
hex[0] => disp[3]~14.IN3
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[5]~2.IN2
hex[1] => disp[5]~3.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[1]~6.IN2
hex[1] => disp[6]~7.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[3]~9.IN2
hex[1] => disp[1]~10.IN2
hex[1] => _.IN0
hex[1] => _.IN0
hex[1] => disp[2]~13.IN2
hex[1] => disp[3]~14.IN2
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[4]~4.IN1
hex[2] => disp[4]~5.IN1
hex[2] => disp[1]~6.IN1
hex[2] => disp[6]~7.IN1
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => _.IN0
hex[2] => disp[6]~11.IN1
hex[2] => disp[5]~12.IN1
hex[2] => disp[2]~13.IN1
hex[2] => disp[3]~14.IN1
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => _.IN0
hex[3] => disp[4]~8.IN0
hex[3] => disp[3]~9.IN0
hex[3] => disp[1]~10.IN0
hex[3] => disp[6]~11.IN0
hex[3] => disp[5]~12.IN0
hex[3] => disp[2]~13.IN0
hex[3] => disp[3]~14.IN0
disp[0] <= disp[0].DB_MAX_OUTPUT_PORT_TYPE
disp[1] <= disp[1].DB_MAX_OUTPUT_PORT_TYPE
disp[2] <= disp[2].DB_MAX_OUTPUT_PORT_TYPE
disp[3] <= disp[3].DB_MAX_OUTPUT_PORT_TYPE
disp[4] <= disp[4].DB_MAX_OUTPUT_PORT_TYPE
disp[5] <= disp[5].DB_MAX_OUTPUT_PORT_TYPE
disp[6] <= disp[6].DB_MAX_OUTPUT_PORT_TYPE


